Step04
1. todo등록 기능(파일쓰기)을 별도의 클래스 TodoTSVWriter로 작성
2. 배열을 컬렉션으로 변경

Step05
1. 관심사의 분리1 : 등록, 조회 등 별도의 로직 처리를 담당하는 별도의 클래스 및 패키지 service 생성,
2. 관심사의 분리2 : 결과값의 출력만을 담당하는 별도의 클래스 및 패키지 view 생성
3. 관심사의 분리3 : 등록, 조회 등 어떤 액션을 수행시킬지 분기, 결정을 담당하여 처리하는 별도의 클래스 및 패키지 controller 생성,

Software Design(설계) Pattern ?
-> 소프트웨어를 만들기 위한 설계에 도움이 되는 몇 가지 유용한 패턴

MVC 패턴
사용자 인터페이스(웹 화면)를 시스템의 다른 부분과 분리하여 결합도(Coupling)를 낮추기 위한 아키텍처(구조) 패턴이다.

개선된 부분
1. 역할별 관심사의 분리를 통해 각 클래스들이 각자의 역할을 수행할 수 있도록 분리되어 관리가 보다 용이해졌고, 가독성이 좋아짐.

한계점
1. 할 일을 수정하거나 삭제하는 기능이 없음.(DB를 파일 입출력이 아닌 컬렉션으로 대체, SQL학습 전까지만)